})
rect(xleft=par("usr")[1],xright=par("usr")[2],
ybottom=par("usr")[3],ytop=par("usr")[4],col=NA)
if(xaxis==T){
axis(1,log10(unlist(sapply(1:10,function(i){
return(c(c(1:9)*10^i))
}))),labels=NA,col="gray65",tck=-0.04)
axis(1,log10(unlist(sapply(log10(c(20000,50000,100000,500000,1000000,5000000)),function(i){
return(c(10^i))
}))),labels=NA)
axis(1,log10(c(20000,50000,100000,500000,1000000,5000000)),tick=F,las=2,
line=-0.3,labels=c("20kb","50kb","100kb","500kb","1Mb","5Mb"),cex.axis=0.75)
}
if(yaxis==T){
axis(2,log10(unlist(sapply(-3:0,function(i){
return(c(c(1:9)*10^i))
}))),labels=NA,col="gray65",tck=-0.04)
axis(2,log10(unlist(sapply(log10(rev(c(0.001,0.005,0.01,0.05,0.1,0.5,1))),function(i){
return(c(10^i))
}))),labels=NA)
axis(2,log10(rev(c(0.001,0.005,0.01,0.05,0.1,0.5,1))),labels=c("100%","50%","10%","5%","1%","0.5%","0.1%"),line=-0.3,las=2,tick=F,cex.axis=0.75)
}
}
#Plots
#All CNVs
df <- read.table(paste(WRKDIR,"plot_data/CNV_size_bySize.all.txt",sep=""),header=F)[,12:203]
#Vertical stack
pdf(paste(WRKDIR,"rCNV_map_paper/Figures/Figure1/CNVs_by_size_subplots/all.vertical.pdf",sep=""),
height=4,width=2)
par(mfcol=c(2,1))
plotsizes(df[c(1,3,5,9),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=T,mar=c(0.6,2.6,2.6,0.6))
plotsizes(df[c(2,4,6,10),],c("black",colors[c(1,2,4),2]),xaxis=T,yaxis=T)
dev.off()
#Horizontal stack
pdf(paste(WRKDIR,"rCNV_map_paper/Figures/Figure1/CNVs_by_size_subplots/all.horizontal.pdf",sep=""),
height=2,width=4)
par(mfcol=c(1,2))
plotsizes(df[c(1,3,5,9),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=T,mar=c(0.6,2.6,2.6,0.6))
plotsizes(df[c(2,4,6,10),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=F,mar=c(0.6,0.6,2.6,2.6))
dev.off()
#Coding CNVs
df <- read.table(paste(WRKDIR,"plot_data/CNV_size_bySize.coding.txt",sep=""),header=F)[,12:203]
#Vertical stack
pdf(paste(WRKDIR,"rCNV_map_paper/Figures/Figure1/CNVs_by_size_subplots/coding.vertical.pdf",sep=""),
height=4,width=2)
par(mfcol=c(2,1))
plotsizes(df[c(1,3,5,9),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=F,mar=c(0.6,2.6,2.6,0.6))
plotsizes(df[c(2,4,6,10),],c("black",colors[c(1,2,4),2]),xaxis=T,yaxis=F)
dev.off()
#Horizontal stack
pdf(paste(WRKDIR,"rCNV_map_paper/Figures/Figure1/CNVs_by_size_subplots/coding.horizontal.pdf",sep=""),
height=2,width=4)
par(mfcol=c(1,2))
df <- read.table(paste(WRKDIR,"plot_data/CNV_size_bySize.coding.txt",sep=""),header=F)[,12:203]
plotsizes(df[c(1,3,5,9),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=T,mar=c(0.6,2.6,2.6,0.6))
plotsizes(df[c(2,4,6,10),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=F,mar=c(0.6,0.6,2.6,2.6))
dev.off()
#Noncoding CNVs
df <- read.table(paste(WRKDIR,"plot_data/CNV_size_bySize.noncoding.txt",sep=""),header=F)[,12:203]
#Vertical stack
pdf(paste(WRKDIR,"rCNV_map_paper/Figures/Figure1/CNVs_by_size_subplots/noncoding.vertical.pdf",sep=""),
height=4,width=2)
par(mfcol=c(2,1))
plotsizes(df[c(1,3,5,9),],c("black",colors[c(1,2,4),2]),xaxis=F,yaxis=F,mar=c(0.6,2.6,2.6,0.6))
plotsizes(df[c(2,4,6,10),],c("black",colors[c(1,2,4),2]),xaxis=T,yaxis=F)
dev.off()
#Horizontal stack
pdf(paste(WRKDIR,"rCNV_map_paper/Figures/Figure1/CNVs_by_size_subplots/noncoding.horizontal.pdf",sep=""),
height=2,width=4)
par(mfcol=c(1,2))
plotsizes(df[c(1,3,5,9),],c("black",colors[c(1,2,4),2]),xaxis=T,yaxis=T,mar=c(2.6,2.6,0.6,0.6))
plotsizes(df[c(2,4,6,10),],c("black",colors[c(1,2,4),2]),xaxis=T,yaxis=F,mar=c(2.6,0.6,0.6,2.6))
dev.off()
data.frame(c(0,4),c(2,91))
fisher.test(data.frame(c(0,4),c(2,91)),alternative="greater")
fisher.test(data.frame(c(0,4),c(2,91)),alternative="less")
fisher.test(data.frame(c(0,2),c(4,91)),alternative="less")
fisher.test(data.frame(c(0,2),c(4,91)),alternative="greater")
fisher.test(data.frame(c(0,2),c(4,91)),alternative="greater")$p.value
fisher.test(data.frame(c(1,2),c(26,91)),alternative="greater")$p.value
fisher.test(data.frame(c(1,2),c(26,91)),alternative="less")$p.value
data.frame(c(1,2),c(26,91))
fisher.test(data.frame(c(1,2),c(26,91)),alternative="less")$p.value
fisher.test(data.frame(c(1,2),c(26,91)),alternative="less")$estimate
(91/26)/2
1/((91/26)/2)
fisher.test(data.frame(c(1,2),c(26,91)),alternative="less")$estimate
fisher.test(data.frame(c(1,2),c(26,91)),alternative="less")$p.value
fisher.test(data.frame(c(1,2),c(26,91)),alternative="greater")$p.value
fisher.test(data.frame(c(1,2),c(2,91)),alternative="greater")$p.value
TBR.CTRL=2
TAD.CASE=1
TAD.CTRL=1
TBR.CASE=91
TAD.CASE=26
scores <- as.numeric(c(TBR.CTRL,TAD.CTRL,TBR.CASE,TAD.CASE))
scores
scores[3]/scores[4]
scores[1]/scores[2]
scores[3]/scores[4])/(scores[1]/scores[2]
(scores[3]/scores[4])/(scores[1]/scores[2])
matrix(scores[c(3:4,1:2)],nrow=2)
matrix(scores[c(4,2,3,1)],nrow=2)
scores[c(3,1,4,2)],nrow=2)
matrix(scores[c(3,1,4,2)],nrow=2)
scores
matrix(scores[c(2,1,4,3)],nrow=2)
fisher.test(matrix(scores[c(2,1,4,3)],nrow=2),
alternative="greater")$p.value
scores
scores[4] <- 1
fisher.test(matrix(scores[c(2,1,4,3)],nrow=2),
alternative="greater")$p.value
matrix(scores[c(2,1,4,3)],nrow=2)
scores[3]/scores[4])/(scores[1]/scores[2]
(scores[3]/scores[4])/(scores[1]/scores[2])
plot(1:10,pch=19,cex=2,col="#5ebded")
data.frame(c(0,0),c(1,199))
fisher.test(data.frame(c(0,0),c(1,199)))
fisher.test(data.frame(c(0,0),c(1,199)),alternative="greater")
fisher.test(data.frame(c(1,1),c(1,199)),alternative="greater")
controls <- "/Users/collins/scratch/CTRL.DEL.TBRden_binned_pileup.bed.gz"
cases <- "/Users/collins/scratch/DD.DEL.TBRden_binned_pileup.bed.gz"
QQ=T
manhattan=T
manColor="green"
adjusted=1E-8
return=F
OUTDIR="~/scratch/"
prefix="TEST"
gzip=T
#Sanity check input files
if(!(file.exists(controls))){
stop(paste("Input file ",controls," does not exist.",sep=""))
}
if(!(file.exists(cases))){
stop(paste("Input file ",cases," does not exist.",sep=""))
}
#Import control data
CTRL <- read.table(controls,header=T,comment.char="",sep="\t")
names(CTRL)[1] <- "chr"
#Import case data
CASE <- read.table(cases,header=T,comment.char="",sep="\t")
names(CASE)[1] <- "chr"
#Merge cases and controls and subset to relevant columns
ALL <- merge(CTRL,CASE,by=1:4,sort=F,suffixes=c(".CTRL",".CASE"))
#Print warning if number of rows in merged case + control file doesn't match cases or controls
if(nrow(CASE)!=nrow(ALL) | nrow(CTRL)!=nrow(ALL)){
warning("TBR definitions are apparently inconsistent between cases and controls. Proceeding anyway...")
}
head(ALL[,c(5:6,8:9)])
head(ALL)
head(ALL,100)
i <[ 75]
i <- 75
ALL[,c(5:6,8:9)]
ALL[i,c(5:6,8:9)]
vals <- ALL[i,c(5:6,8:9)]
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
library(TBRden)
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
vals <- ALL[i,c(5:6,8:9)]
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
TBR.CTRL <- 3
TBR.CASE <- 23
TAD.CTRL <- 0
TAD.CASE <- 22
scores <- as.numeric(c(TBR.CTRL,TAD.CTRL,TBR.CASE,TAD.CASE))
scores[3]/scores[4]
scores[1]/scores[2]
(scores[3]/scores[4])/(scores[1]/scores[2])
matrix(scores[c(2,1,4,3)],nrow=2)
fisher.test(matrix(scores[c(2,1,4,3)],nrow=2),
alternative="greater")$p.value
scores[4] <- 0
fisher.test(matrix(scores[c(2,1,4,3)],nrow=2),
alternative="greater")$p.value
scores
scores[2] <- 3
scores
fisher.test(matrix(scores[c(2,1,4,3)],nrow=2),
alternative="greater")$p.value
ALL[i,c(5,7:8,10)]
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
vals <- ALL[i,c(5,7:8,10)]
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
(23/21)/(3/4)
ALL[i,5:10]
#Run Fisher test on TBR vs left and right TADs separately
fisher.L <- t(apply(ALL[,c(5:6,8:9)],1,function(vals){
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
}))
fisher.L <- t(apply(ALL[,c(5:6,8:9)],1,function(vals){
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
}))
fisher.R <- t(apply(ALL[,c(5,7:8,10)],1,function(vals){
TBR.fisher.test(vals[1],vals[2],vals[3],vals[4])
}))
#Run Fisher test on TBR vs left+right TADs
fisher.M <- t(apply(ALL[,5:10],1,function(vals){
TBR.fisher.test(vals[1],sum(vals[2:3],na.rm=T),vals[4],sum(vals[5:6],na.rm=T))
}))
fisher <- as.data.frame(cbind(fisher.L,fisher.R,fisher.M))
fisher[,7] <- apply(fisher[,c(1,3)],1,min,na.rm=T)
names(fisher) <- c("p.Left","OR.Left","p.Right","OR.Right",
"p.Combined","OR.Combined","p.Min")
#Optional: generate QQ plot
if(QQ==T){
pdf(paste(OUTDIR,"/",prefix,".QQ.pdf",sep=""),height=6,width=6)
cleanQQ(fisher[,7],adjusted=adjusted)
dev.off()
}
#Clean output data frame and write to file
res <- cbind(ALL,fisher)
write.table(res,paste(OUTDIR,"/",prefix,".TBRden_results.bed",sep=""),
col.names=T,row.names=F,sep="\t",quote=F)
if(gzip==T){
system(paste("gzip -f ",OUTDIR,"/",prefix,".TBRden_results.bed",sep=""))
}
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
cases
controls
manColor <- "orange"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
head(df)
tail(df)
unique(df$CHR)
theme="orange"
nominal=0.05
adjusted=1E-8
contigs <- unique(df[,1])
contigs
contigs <- contigs[which(!(is.na(contigs)))]
contigs
indexes <- as.data.frame(t(sapply(contigs,function(chr){
return(c(chr,0,max(df[which(df[,1]==chr),2])))
})))
indexes
indexes[,2] <- c(0,cumsum(indexes[,3]))[1:nrow(indexes)]
indexes
cumsum(indexes[,3])
indexes$sum <- cumsum(indexes[,3])
indexes$bg <- rep(colors[1:2],ceiling(nrow(indexes)/2))[1:nrow(indexes)]
indexes
#Set color theme vectors
if(theme=="green"){
colors <- c("#3a874c","#3dce56","#f9ff54","#ff5a02")
}else if(theme=="blue"){
colors <- c("#3d8c84","#7cfff1","#ffe502","#ff02e1")
}else if(theme=="red"){
colors <- c("#911212","#fc3737","#fff602","#021bff")
}else if(theme=="orange"){
colors <- c("#ed8d07","#f1a517","#1472e5","#d11ba9")
}else if(theme=="purple"){
colors <- c("#601d87","#c470f4","#42f1f4","#f9ea0e")
}
indexes$bg <- rep(colors[1:2],ceiling(nrow(indexes)/2))[1:nrow(indexes)]
indexes
contigs <- unique(df[,1])
contigs <- contigs[which(!(is.na(contigs)))]
#Create index data frame
indexes <- as.data.frame(t(sapply(contigs,function(chr){
return(c(chr,0,max(df[which(df[,1]==chr),2])))
})))
indexes$sum <- cumsum(indexes[,3])
indexes$bg <- rep(colors[1:2],ceiling(nrow(indexes)/2))[1:nrow(indexes)]
#Create new plotting df with modified coordinates & color assignments
df.plot <- as.data.frame(t(apply(df,1,function(row){
return(c(row[1],
as.numeric(row[2]+indexes[as.numeric(row[1]),2]),
as.numeric(row[3]),
indexes[as.numeric(row[1]),4]))
})))
df.plot[,2] <- as.numeric(as.character(df.plot[,2]))
df.plot[,3] <- as.numeric(as.character(df.plot[,3]))
plot(x=c(0,max(indexes[,3])),y=c(0,1.1*max(-log10(df[,3]))),
type="n",xaxs="i",yaxs="i",xaxt="n",yaxt="n",xlab="",ylab="")
rect(xleft=rep(par("usr")[1],3),xright=rep(par("usr")[2],3),
ybottom=c(par("usr")[3],-log10(nominal),-log10(adjusted)),
ytop=c(-log10(nominal),-log10(adjusted),par("usr")[4]),
border=NA,col=c("gray60","gray80","gray95"))
abline(v=indexes[,2],col="gray90")
abline(v=indexes[,3],col="gray90")
indexes[,3]
indexes
contigs <- unique(df[,1])
contigs <- contigs[which(!(is.na(contigs)))]
#Create index data frame
indexes <- as.data.frame(t(sapply(contigs,function(chr){
return(c(chr,0,max(df[which(df[,1]==chr),2])))
})))
indexes$sum <- cumsum(indexes[,3])
indexes$bg <- rep(colors[1:2],ceiling(nrow(indexes)/2))[1:nrow(indexes)]
#Create new plotting df with modified coordinates & color assignments
df.plot <- as.data.frame(t(apply(df,1,function(row){
return(c(row[1],
as.numeric(row[2]+indexes[as.numeric(row[1]),2]),
as.numeric(row[3]),
indexes[as.numeric(row[1]),4]))
})))
df.plot[,2] <- as.numeric(as.character(df.plot[,2]))
df.plot[,3] <- as.numeric(as.character(df.plot[,3]))
#Prepare plotting window
par(mar=c(2.1,3.1,0.6,0.6))
plot(x=c(0,max(indexes[,4])),y=c(0,1.1*max(-log10(df[,3]))),
type="n",xaxs="i",yaxs="i",xaxt="n",yaxt="n",xlab="",ylab="")
rect(xleft=rep(par("usr")[1],3),xright=rep(par("usr")[2],3),
ybottom=c(par("usr")[3],-log10(nominal),-log10(adjusted)),
ytop=c(-log10(nominal),-log10(adjusted),par("usr")[4]),
border=NA,col=c("gray60","gray80","gray95"))
abline(v=indexes[,4],col="gray90")
points(df.plot[,2],-log10(df.plot[,3]),
cex=0.6,pch=21,lwd=0.01,bg=as.character(df.plot[,4]))
abline(h=-log10(c(nominal,adjusted)),col=colors[3:4])
axis(1,at=indexes[,2],labels=NA)
midpoints <- sapply(1:length(indexes[,2]),function(i){
return(mean(c(indexes[i,2],indexes[i,2]+indexes[i,3])))
})
par(mar=c(2.1,3.1,0.6,0.6))
plot(x=c(0,max(indexes[,4])),y=c(0,1.1*max(-log10(df[,3]))),
type="n",xaxs="i",yaxs="i",xaxt="n",yaxt="n",xlab="",ylab="")
rect(xleft=rep(par("usr")[1],3),xright=rep(par("usr")[2],3),
ybottom=c(par("usr")[3],-log10(nominal),-log10(adjusted)),
ytop=c(-log10(nominal),-log10(adjusted),par("usr")[4]),
border=NA,col=c("gray60","gray80","gray95"))
abline(v=indexes[,4],col="gray90")
abline(h=-log10(c(nominal,adjusted)),col=colors[3:4])
#Adds axes & titles
axis(1,at=indexes[,2],labels=NA)
midpoints <- sapply(1:length(indexes[,2]),function(i){
return(mean(c(indexes[i,2],indexes[i,2]+indexes[i,3])))
})
axis(1,at=midpoints,labels=indexes[,1],tick=F,line=-1.25,cex.axis=0.4)
mtext(1,text="Chromosome",line=0.5)
y.at <- seq(0,ceiling(par("usr")[4]),by=ceiling(par("usr")[4]/6))
axis(2,at=y.at,labels=NA)
axis(2,at=y.at,tick=F,line=-0.3,labels=y.at,cex.axis=0.75,las=2)
mtext(2,text=expression(-log[10](italic(p))),line=1.5)
axis(1,at=indexes[,4],labels=NA)
indexes
midpoints <- sapply(1:length(indexes[,2]),function(i){
return(mean(c(indexes[i,4],indexes[i,4]-indexes[i,3])))
})
midpoints
axis(1,at=midpoints,labels=indexes[,1],tick=F,line=-1.25,cex.axis=0.4)
mtext(1,text="Chromosome",line=0.5)
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
df.plot
head(df)
indexes
df.plot <- as.data.frame(t(apply(df,1,function(row){
return(c(row[1],
as.numeric(row[2]+indexes[as.numeric(row[1]),4]-indexes[as.numeric(row[1]),3]),
as.numeric(row[3]),
indexes[as.numeric(row[1]),5]))
})))
df.plot[,2] <- as.numeric(as.character(df.plot[,2]))
df.plot[,3] <- as.numeric(as.character(df.plot[,3]))
head(df.plot)
plot(df.plot[,2])
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=6)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=3,width=6)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manCol <- "blue"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manColor <- "blue"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manCol <- "green"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manColor <- "green"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manColor <- "purple"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manColor <- "red"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
manColor <- "brown"
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
manColor <- "brown"
library(TBRden)
source('~/Desktop/RCollins/Talkowski_Local/CNV_DB/rCNV_map/rCNVmap/TBRden/R/cleanManhattan.R')
df <- res[,c(1,2,ncol(res))]
names(df) <- c("CHR","BP","P")
df$CHR <- as.numeric(as.character(df$CHR))
pdf(paste(OUTDIR,"/",prefix,".manhattan.pdf",sep=""),height=4,width=8)
cleanManhattan(df,adjusted=adjusted,theme=manColor)
dev.off()
library(TBRden)
data.frame(c(22,0),c(75,85))
fisher.test(data.frame(c(22,0),c(75,85)),alternative="greater")
fisher.test(data.frame(c(0,21),c(75,85)),alternative="greater")
fisher.test(data.frame(c(1,21),c(99,84)),alternative="greater")
fisher.test(data.frame(c(21,1),c(99,84)),alternative="greater")
